Notes
--

The only difference between the older version of Seseragi and the new is the header presentation. I can create two different headers to experiment with each.

The older page header is a gradient that extends downward until it merges into the page body. Its similar to the gradient that extends downward from the header into the page body on the newer design.

The newer header HTML is

<header>
  <hgroup>
    <h1 class="logo">Seseragi</h1>
    <h2 class="tagline">The sound of flowing water.</h2>
  </hgroup>
  <div is='panel-menu'></div>
</header>

and the older header is

<header id="ledge_container">
    <hgroup>
      <h1 id="logo">My website</h1>
      <h2 id="slogan">A lot of effort went into making this effortless.</h2>
    </hgroup>
   <!-- navigation goes here -->
</header>

They are nearly identical except perhaps for CSS styles.

The old header used floats to divide the header into left and right sections.

On the newer design, the gradient was removed from the header and folded into the navigation menu.

A class named 'panel' was defined to place the downward gradient behind any element, mostly used for creating visual separation between page sections.

The first section became essentially the top gradient for content such as text.

Or in other words, the gradient associated with text became part of the text instead of the page and the header became a non-gradient area.

They are somewhat opposites.


The old Seseragi design has a border creating a visual space for the "page" with the gradient behind it, and the text flowing underneath with or without a header above it.



I think

drop-cap where drop cap is applied without circle
drop-cap-circle where drop cap is applied with circle

class="drop-cap"
class="drop-cap-circle"

where there is an individual class for each type of drop cap and the name incorporates the inheritence

essentially

.drop-cap {
  // drop cap
}

.drop-cap-circle {
  //drop cap
  // draw circle
}

or

drop-cap where this is the base class
with-circle where this is a class that is composable with the base class
class="drop-cap"
class="drop-cap with-circle"

are best.


I thought that the best way to set text width was using padding but I'm not sure.

article p {
    padding-left: 1em;
    padding-right: 1em;
    margin-left: 6em;
    margin-right: 6em;
}

article p {
    padding-left: 6em;
    padding-right: 6em;
}

I want a font, a font size, a line height, a margin or padding that keeps lines about 55 chars wide and readable under flexible conditions.

i have a problem is this a local workspace with a server or a remote workspace with a server?

if its a project and not a website then it will be contained in a git repo and the repo can be pulled into the website
or linked to the repo on github


each toy should have its own repo, which can be local or on github

what if a project is a website?

Like this

projects
  foo
  bar
  baz

websites
  learning
    foo
    bar
    baz


TODO The flows pages are insufficiently responsive. A small window causes text overlap.


home paga
article
flows


Thinking about the flows, a flow is often only applicable to one context, typically a kind of page. To keep flows from bleeding into one another one approach is to create a flow CSS file for each type of flow.


Right now, sections are contained in a container that is a generic DIV element.

<!-- start of section container -->
<div>  <-- NOT STICKY
  <!-- start of sticky panel -->
  <div>  <-- STICKY
  ...
  </div>
    <section>  <-- NOT STICKY
      ...
    </section>
</div>

Note: See arrows for where an element must be sticky.

This allows any text section to scroll up past the sticky panel while it sticks.


There is something in the current version of the style sheet that is causing images to float above the sticky header while the text goes under.

I traced the issue to a stray position: relatvie property on the image container element. I understand now that it was cancelling the position: sticky for the image. I could have realized without debugging by thinking about how sticky is a value of the position property and that if an element isn't sticking, then perhaps its position is being canceled or modifiied somewhere close the the image element. Also, I had set the position: relative as a defualt defensively, which blocked the flow of position properties in the deeply nested element.

Two days debugging.

Look what I found digging in the old commits.

/* Flows */
    .pin { 
        position: sticky;
        position: -webkit-sticky;
        top: 0;
        /* height: 100%;
        width: 50%; */
        overflow-y: scroll;
    }

    .pin-to-top {
        position: sticky;
        top: 0;
        /* Critical to prevent sticky overlapping sticky header. */
        z-index: 1;
    }


--

Doing some testing on the working version of Seseragi cloned from the server.

I found:

Removing sticky from div.notebook-panel stops image from sticking on scroll down.

Removing (turning off) top: 0 from div.notebook-panel causes desired sticky behaviior to stop and image scrolls.

Removing height: 50% from div.notebook-panel causes the sticky behavior to stop working.

Overflow-y set to scroll turned off just affects the visible width of the layout.


